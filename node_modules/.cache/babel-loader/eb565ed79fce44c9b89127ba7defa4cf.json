{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\new\\\\3AEDG\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\new\\\\3AEDG\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nexport var FETCH_BLOGS_SUCCESS = 'FETCH_BLOGS_SUCCESS';\nexport var FETCH_BLOGS_DETAIL_SUCCESS = 'FETCH_BLOGS_DETAIL_SUCCESS';\nexport var FETCH_BLOGS_DETAIL_ERROR = 'FETCH_BLOGS_DETAIL_ERROR';\nexport var FETCH_BLOGS_ERROR = 'FETCH_BLOGS_ERROR'; // export function fetchBlogsAction (value) {\n//     console.log('trigger action');\n//     return ({type: FETCH_BLOGS_SUCCESS, value})\n// }\n// export  const fetchBlogsAction = () =>{\n//     return async dispatch => {\n//         const res = await fetch('https://nodejssalesforce.herokuapp.com/blogs');\n//         const data = await res.json();\n//         dispatch({\n//             type: FETCH_BLOGS_SUCCESS,\n//             payload: data\n//         })\n//     }\n// }\n\nexport var fetchBlogsAction = function fetchBlogsAction() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch('https://nodejssalesforce.herokuapp.com/blogs', {\n                  method: 'GET',\n                  mode: 'cors',\n                  Headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                data = _context.sent;\n                dispatch({\n                  type: FETCH_BLOGS_SUCCESS,\n                  payload: data\n                });\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch({\n                  type: FETCH_BLOGS_ERROR,\n                  payload: _context.t0.response.data\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchBlogsLimitAction = function fetchBlogsLimitAction() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return fetch('https://nodejssalesforce.herokuapp.com/blogs-limit', {\n                  method: 'GET',\n                  mode: 'cors',\n                  Headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 3:\n                res = _context2.sent;\n                _context2.next = 6;\n                return res.json();\n\n              case 6:\n                data = _context2.sent;\n                dispatch({\n                  type: FETCH_BLOGS_SUCCESS,\n                  payload: data\n                });\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch({\n                  type: FETCH_BLOGS_ERROR,\n                  payload: _context2.t0.response.data\n                });\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 10]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchBlogDetail = function fetchBlogDetail(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return fetch('https://nodejssalesforce.herokuapp.com/blogs/' + id);\n\n              case 3:\n                res = _context3.sent;\n                _context3.next = 6;\n                return res.json();\n\n              case 6:\n                data = _context3.sent;\n                dispatch({\n                  type: FETCH_BLOGS_DETAIL_SUCCESS,\n                  payload: data\n                });\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](0);\n                dispatch({\n                  type: FETCH_BLOGS_DETAIL_ERROR,\n                  payload: _context3.t0.response.data\n                });\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 10]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["E:\\new\\3AEDG\\src\\store\\blog\\action.js"],"names":["FETCH_BLOGS_SUCCESS","FETCH_BLOGS_DETAIL_SUCCESS","FETCH_BLOGS_DETAIL_ERROR","FETCH_BLOGS_ERROR","fetchBlogsAction","dispatch","fetch","method","mode","Headers","res","json","data","type","payload","response","fetchBlogsLimitAction","fetchBlogDetail","id"],"mappings":"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","sourcesContent":["export const FETCH_BLOGS_SUCCESS = 'FETCH_BLOGS_SUCCESS';\r\nexport const FETCH_BLOGS_DETAIL_SUCCESS = 'FETCH_BLOGS_DETAIL_SUCCESS';\r\nexport const FETCH_BLOGS_DETAIL_ERROR = 'FETCH_BLOGS_DETAIL_ERROR';\r\nexport const FETCH_BLOGS_ERROR= 'FETCH_BLOGS_ERROR';\r\n\r\n// export function fetchBlogsAction (value) {\r\n//     console.log('trigger action');\r\n//     return ({type: FETCH_BLOGS_SUCCESS, value})\r\n// }\r\n\r\n// export  const fetchBlogsAction = () =>{\r\n//     return async dispatch => {\r\n//         const res = await fetch('https://nodejssalesforce.herokuapp.com/blogs');\r\n//         const data = await res.json();\r\n//         dispatch({\r\n//             type: FETCH_BLOGS_SUCCESS,\r\n//             payload: data\r\n//         })\r\n//     }\r\n// }\r\nexport  const fetchBlogsAction = ()=> async dispatch =>{\r\n\r\n    try {\r\n        const res = await fetch('https://nodejssalesforce.herokuapp.com/blogs' , { method: 'GET' ,mode: 'cors' ,Headers: {'Access-Control-Allow-Origin':'*', 'Content-Type': 'application/json'} });\r\n        const data = await res.json();\r\n        dispatch({\r\n            type: FETCH_BLOGS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }catch (e) {\r\n        dispatch({\r\n            type: FETCH_BLOGS_ERROR,\r\n            payload: e.response.data\r\n        })\r\n    }\r\n\r\n}\r\nexport  const fetchBlogsLimitAction = ()=> async dispatch =>{\r\n\r\n    try {\r\n        const res = await fetch('https://nodejssalesforce.herokuapp.com/blogs-limit' , { method: 'GET' ,mode: 'cors' ,Headers: {'Access-Control-Allow-Origin':'*', 'Content-Type': 'application/json'} });\r\n        const data = await res.json();\r\n        dispatch({\r\n            type: FETCH_BLOGS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }catch (e) {\r\n        dispatch({\r\n            type: FETCH_BLOGS_ERROR,\r\n            payload: e.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const fetchBlogDetail = (id) => async dispatch =>{\r\n    try {\r\n        const res = await fetch('https://nodejssalesforce.herokuapp.com/blogs/' + id);\r\n        const data = await res.json();\r\n        dispatch({\r\n            type: FETCH_BLOGS_DETAIL_SUCCESS,\r\n            payload: data\r\n        })\r\n    }catch (e) {\r\n        dispatch({\r\n            type: FETCH_BLOGS_DETAIL_ERROR,\r\n            payload: e.response.data\r\n        })\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}